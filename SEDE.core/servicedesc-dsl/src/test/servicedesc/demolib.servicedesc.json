{
  "collections" : [ {
    "services" : [ {
      "stateType" : "demo.math.Addierer",
      "methods" : [ {
        "inputs" : [ {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "demo.math.Addierer",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        }, {
          "type" : "demo.math.Addierer",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "__construct",
        "metaTags" : [ ],
        "simpleName" : "__construct",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : false
      }, {
        "inputs" : [ ],
        "outputs" : [ {
          "type" : "demo.math.Addierer",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        }, {
          "type" : "demo.math.Addierer",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "__construct",
        "metaTags" : [ ],
        "simpleName" : "__construct",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : false
      }, {
        "inputs" : [ {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "addier",
        "metaTags" : [ ],
        "simpleName" : "addier",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : true
      }, {
        "inputs" : [ {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "addierListe",
        "metaTags" : [ ],
        "simpleName" : "addierListe",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : true
      }, {
        "inputs" : [ {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        }, {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "summierListe",
        "metaTags" : [ ],
        "simpleName" : "summierListe",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : true
      }, {
        "inputs" : [ {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "summier",
        "metaTags" : [ ],
        "simpleName" : "summier",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : true
      }, {
        "inputs" : [ ],
        "outputs" : [ {
          "type" : "demo.types.NummerList",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "fail",
        "metaTags" : [ ],
        "simpleName" : "fail",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : false
      }, {
        "inputs" : [ ],
        "outputs" : [ ],
        "qualifier" : "sleep",
        "metaTags" : [ ],
        "simpleName" : "sleep",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : false
      }, {
        "inputs" : [ {
          "type" : "builtin.List",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        }, {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "builtin.List",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "addierBuiltIn",
        "metaTags" : [ ],
        "simpleName" : "addierBuiltIn",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : false
      } ],
      "interfaces" : [ ],
      "fieldTypes" : {
        "state" : "demo.math.Addierer"
      },
      "serviceParameters" : null,
      "qualifier" : "demo.math.Addierer",
      "metaTags" : [ ],
      "simpleName" : "demo.math.Addierer",
      "comments" : [ ],
      "dynAux" : null,
      "isAbstract" : false
    }, {
      "stateType" : "demo.math.Gerade",
      "methods" : [ {
        "inputs" : [ {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        }, {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "demo.math.Gerade",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        }, {
          "type" : "demo.math.Gerade",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "__construct",
        "metaTags" : [ ],
        "simpleName" : "__construct",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : true,
        "isPure" : false
      }, {
        "inputs" : [ {
          "type" : "Number",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "demo.types.Punkt",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "calc",
        "metaTags" : [ ],
        "simpleName" : "calc",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : false
      }, {
        "inputs" : [ {
          "type" : "demo.types.Punkt",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "outputs" : [ {
          "type" : "Bool",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "liagtAufGerade",
        "metaTags" : [ ],
        "simpleName" : "liagtAufGerade",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : true
      }, {
        "inputs" : [ ],
        "outputs" : [ {
          "type" : "demo.types.Punkt",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "achsenabschnitt",
        "metaTags" : [ ],
        "simpleName" : "achsenabschnitt",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : true
      }, {
        "inputs" : [ ],
        "outputs" : [ {
          "type" : "demo.types.Punkt",
          "name" : null,
          "fixedValue" : null,
          "callByValue" : true,
          "readOnly" : false
        } ],
        "qualifier" : "nullstelle",
        "metaTags" : [ ],
        "simpleName" : "nullstelle",
        "comments" : [ ],
        "dynAux" : null,
        "isContextFree" : false,
        "isPure" : true
      } ],
      "interfaces" : [ ],
      "fieldTypes" : {
        "state" : "demo.math.Gerade"
      },
      "serviceParameters" : null,
      "qualifier" : "demo.math.Gerade",
      "metaTags" : [ ],
      "simpleName" : "demo.math.Gerade",
      "comments" : [ ],
      "dynAux" : null,
      "isAbstract" : false
    } ],
    "dataTypes" : [ {
      "semanticType" : "Arr",
      "qualifier" : "demo.types.NummerList",
      "metaTags" : [ ],
      "simpleName" : "demo.types.NummerList",
      "comments" : [ ],
      "dynAux" : {
        "mappedClassName" : "demo.types.DemoCaster",
        "dataCastHandler" : null
      }
    }, {
      "semanticType" : "Arr",
      "qualifier" : "demo.types.Punkt",
      "metaTags" : [ ],
      "simpleName" : "demo.types.Punkt",
      "comments" : [ ],
      "dynAux" : {
        "mappedClassName" : "demo.types.DemoCaster",
        "dataCastHandler" : null
      }
    }, {
      "semanticType" : "demo.math.Addierer",
      "qualifier" : "demo.math.Addierer",
      "metaTags" : [ ],
      "simpleName" : "demo.math.Addierer",
      "comments" : [ ],
      "dynAux" : null
    }, {
      "semanticType" : "demo.math.Gerade",
      "qualifier" : "demo.math.Gerade",
      "metaTags" : [ ],
      "simpleName" : "demo.math.Gerade",
      "comments" : [ ],
      "dynAux" : null
    } ],
    "comments" : [ "This library serves as a demonstration and testing library for integration tests in SEDE.", "Implementation: https://github.com/fmohr/SEDE.services/tree/master/demolib/src/main" ],
    "qualifier" : "demolib",
    "metaTags" : [ ],
    "simpleName" : "SEDE Demo Library"
  } ]
}